// Generated by view binder compiler. Do not edit!
package med.Save.medsaveinv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import med.Save.medsaveinv.R;

public final class ActivitySurveyFormBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnNext;

  @NonNull
  public final AppCompatButton btnSubmit;

  @NonNull
  public final EditText etAddDrName;

  @NonNull
  public final EditText etAge;

  @NonNull
  public final EditText etAmoutByTpa;

  @NonNull
  public final EditText etBP;

  @NonNull
  public final EditText etBloodSugar;

  @NonNull
  public final EditText etDateNAtureofAilment;

  @NonNull
  public final TextView etDateofAddmission;

  @NonNull
  public final TextView etDateofDis;

  @NonNull
  public final EditText etDrMob;

  @NonNull
  public final EditText etDurationPreIll;

  @NonNull
  public final EditText etHopNameAdd;

  @NonNull
  public final EditText etInvestigatorMob;

  @NonNull
  public final EditText etNameAndAdd;

  @NonNull
  public final EditText etNoOfBed;

  @NonNull
  public final EditText etPolicyNo;

  @NonNull
  public final EditText etRelationInsured;

  @NonNull
  public final EditText etReqAmount;

  @NonNull
  public final EditText etRoomRent;

  @NonNull
  public final EditText etSex;

  @NonNull
  public final EditText etSumInsured;

  @NonNull
  public final EditText etTLCWBC;

  @NonNull
  public final EditText etTemp;

  @NonNull
  public final EditText etVeriPatientAddDetails;

  @NonNull
  public final EditText etVeriPatientAgeMAtched;

  @NonNull
  public final EditText etVeriPatientPhotoMatched;

  @NonNull
  public final EditText etVeriPatientSignature;

  @NonNull
  public final EditText etVeriPatientonBed;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgLogout;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final LinearLayout llOne;

  @NonNull
  public final LinearLayout llTwo;

  @NonNull
  public final TextView newDate;

  @NonNull
  public final RelativeLayout rll;

  @NonNull
  public final Spinner spinnerDocIDCard;

  @NonNull
  public final Spinner spinnerDocIndoreCase;

  @NonNull
  public final Spinner spinnerDocPreAuth;

  @NonNull
  public final Spinner spinnerFirstYrPolicy;

  @NonNull
  public final Spinner spinnerModeofTratment;

  @NonNull
  public final Spinner spinnerRoomType;

  @NonNull
  public final Spinner spinnerTypeofClaim;

  @NonNull
  public final Spinner spinnerVeriHospReg;

  @NonNull
  public final Spinner spinnerVeriPatientAbleDisSymptoms;

  @NonNull
  public final Spinner spinnerVeriPatientAddDetails;

  @NonNull
  public final Spinner spinnerVeriPatientAgeMAtched;

  @NonNull
  public final Spinner spinnerVeriPatientApperedDisco;

  @NonNull
  public final Spinner spinnerVeriPatientLineTreatment;

  @NonNull
  public final Spinner spinnerVeriPatientNoDrVisited;

  @NonNull
  public final Spinner spinnerVeriPatientPhotoMatched;

  @NonNull
  public final Spinner spinnerVeriPatientRecords;

  @NonNull
  public final Spinner spinnerVeriPatientRelaPres;

  @NonNull
  public final Spinner spinnerVeriPatientSignature;

  @NonNull
  public final Spinner spinnerVeriPatientSymptoms;

  @NonNull
  public final Spinner spinnerVeriPatientonBed;

  @NonNull
  public final Spinner spinnerVeriSusBack;

  @NonNull
  public final TextView tvTitle;

  private ActivitySurveyFormBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnNext, @NonNull AppCompatButton btnSubmit,
      @NonNull EditText etAddDrName, @NonNull EditText etAge, @NonNull EditText etAmoutByTpa,
      @NonNull EditText etBP, @NonNull EditText etBloodSugar,
      @NonNull EditText etDateNAtureofAilment, @NonNull TextView etDateofAddmission,
      @NonNull TextView etDateofDis, @NonNull EditText etDrMob, @NonNull EditText etDurationPreIll,
      @NonNull EditText etHopNameAdd, @NonNull EditText etInvestigatorMob,
      @NonNull EditText etNameAndAdd, @NonNull EditText etNoOfBed, @NonNull EditText etPolicyNo,
      @NonNull EditText etRelationInsured, @NonNull EditText etReqAmount,
      @NonNull EditText etRoomRent, @NonNull EditText etSex, @NonNull EditText etSumInsured,
      @NonNull EditText etTLCWBC, @NonNull EditText etTemp,
      @NonNull EditText etVeriPatientAddDetails, @NonNull EditText etVeriPatientAgeMAtched,
      @NonNull EditText etVeriPatientPhotoMatched, @NonNull EditText etVeriPatientSignature,
      @NonNull EditText etVeriPatientonBed, @NonNull ImageView imgBack,
      @NonNull ImageView imgLogout, @NonNull LinearLayout ll, @NonNull LinearLayout llOne,
      @NonNull LinearLayout llTwo, @NonNull TextView newDate, @NonNull RelativeLayout rll,
      @NonNull Spinner spinnerDocIDCard, @NonNull Spinner spinnerDocIndoreCase,
      @NonNull Spinner spinnerDocPreAuth, @NonNull Spinner spinnerFirstYrPolicy,
      @NonNull Spinner spinnerModeofTratment, @NonNull Spinner spinnerRoomType,
      @NonNull Spinner spinnerTypeofClaim, @NonNull Spinner spinnerVeriHospReg,
      @NonNull Spinner spinnerVeriPatientAbleDisSymptoms,
      @NonNull Spinner spinnerVeriPatientAddDetails, @NonNull Spinner spinnerVeriPatientAgeMAtched,
      @NonNull Spinner spinnerVeriPatientApperedDisco,
      @NonNull Spinner spinnerVeriPatientLineTreatment,
      @NonNull Spinner spinnerVeriPatientNoDrVisited,
      @NonNull Spinner spinnerVeriPatientPhotoMatched, @NonNull Spinner spinnerVeriPatientRecords,
      @NonNull Spinner spinnerVeriPatientRelaPres, @NonNull Spinner spinnerVeriPatientSignature,
      @NonNull Spinner spinnerVeriPatientSymptoms, @NonNull Spinner spinnerVeriPatientonBed,
      @NonNull Spinner spinnerVeriSusBack, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnSubmit = btnSubmit;
    this.etAddDrName = etAddDrName;
    this.etAge = etAge;
    this.etAmoutByTpa = etAmoutByTpa;
    this.etBP = etBP;
    this.etBloodSugar = etBloodSugar;
    this.etDateNAtureofAilment = etDateNAtureofAilment;
    this.etDateofAddmission = etDateofAddmission;
    this.etDateofDis = etDateofDis;
    this.etDrMob = etDrMob;
    this.etDurationPreIll = etDurationPreIll;
    this.etHopNameAdd = etHopNameAdd;
    this.etInvestigatorMob = etInvestigatorMob;
    this.etNameAndAdd = etNameAndAdd;
    this.etNoOfBed = etNoOfBed;
    this.etPolicyNo = etPolicyNo;
    this.etRelationInsured = etRelationInsured;
    this.etReqAmount = etReqAmount;
    this.etRoomRent = etRoomRent;
    this.etSex = etSex;
    this.etSumInsured = etSumInsured;
    this.etTLCWBC = etTLCWBC;
    this.etTemp = etTemp;
    this.etVeriPatientAddDetails = etVeriPatientAddDetails;
    this.etVeriPatientAgeMAtched = etVeriPatientAgeMAtched;
    this.etVeriPatientPhotoMatched = etVeriPatientPhotoMatched;
    this.etVeriPatientSignature = etVeriPatientSignature;
    this.etVeriPatientonBed = etVeriPatientonBed;
    this.imgBack = imgBack;
    this.imgLogout = imgLogout;
    this.ll = ll;
    this.llOne = llOne;
    this.llTwo = llTwo;
    this.newDate = newDate;
    this.rll = rll;
    this.spinnerDocIDCard = spinnerDocIDCard;
    this.spinnerDocIndoreCase = spinnerDocIndoreCase;
    this.spinnerDocPreAuth = spinnerDocPreAuth;
    this.spinnerFirstYrPolicy = spinnerFirstYrPolicy;
    this.spinnerModeofTratment = spinnerModeofTratment;
    this.spinnerRoomType = spinnerRoomType;
    this.spinnerTypeofClaim = spinnerTypeofClaim;
    this.spinnerVeriHospReg = spinnerVeriHospReg;
    this.spinnerVeriPatientAbleDisSymptoms = spinnerVeriPatientAbleDisSymptoms;
    this.spinnerVeriPatientAddDetails = spinnerVeriPatientAddDetails;
    this.spinnerVeriPatientAgeMAtched = spinnerVeriPatientAgeMAtched;
    this.spinnerVeriPatientApperedDisco = spinnerVeriPatientApperedDisco;
    this.spinnerVeriPatientLineTreatment = spinnerVeriPatientLineTreatment;
    this.spinnerVeriPatientNoDrVisited = spinnerVeriPatientNoDrVisited;
    this.spinnerVeriPatientPhotoMatched = spinnerVeriPatientPhotoMatched;
    this.spinnerVeriPatientRecords = spinnerVeriPatientRecords;
    this.spinnerVeriPatientRelaPres = spinnerVeriPatientRelaPres;
    this.spinnerVeriPatientSignature = spinnerVeriPatientSignature;
    this.spinnerVeriPatientSymptoms = spinnerVeriPatientSymptoms;
    this.spinnerVeriPatientonBed = spinnerVeriPatientonBed;
    this.spinnerVeriSusBack = spinnerVeriSusBack;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySurveyFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySurveyFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_survey_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySurveyFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      AppCompatButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      AppCompatButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.etAddDrName;
      EditText etAddDrName = ViewBindings.findChildViewById(rootView, id);
      if (etAddDrName == null) {
        break missingId;
      }

      id = R.id.etAge;
      EditText etAge = ViewBindings.findChildViewById(rootView, id);
      if (etAge == null) {
        break missingId;
      }

      id = R.id.etAmoutByTpa;
      EditText etAmoutByTpa = ViewBindings.findChildViewById(rootView, id);
      if (etAmoutByTpa == null) {
        break missingId;
      }

      id = R.id.etBP;
      EditText etBP = ViewBindings.findChildViewById(rootView, id);
      if (etBP == null) {
        break missingId;
      }

      id = R.id.etBloodSugar;
      EditText etBloodSugar = ViewBindings.findChildViewById(rootView, id);
      if (etBloodSugar == null) {
        break missingId;
      }

      id = R.id.etDateNAtureofAilment;
      EditText etDateNAtureofAilment = ViewBindings.findChildViewById(rootView, id);
      if (etDateNAtureofAilment == null) {
        break missingId;
      }

      id = R.id.etDateofAddmission;
      TextView etDateofAddmission = ViewBindings.findChildViewById(rootView, id);
      if (etDateofAddmission == null) {
        break missingId;
      }

      id = R.id.etDateofDis;
      TextView etDateofDis = ViewBindings.findChildViewById(rootView, id);
      if (etDateofDis == null) {
        break missingId;
      }

      id = R.id.etDrMob;
      EditText etDrMob = ViewBindings.findChildViewById(rootView, id);
      if (etDrMob == null) {
        break missingId;
      }

      id = R.id.etDurationPreIll;
      EditText etDurationPreIll = ViewBindings.findChildViewById(rootView, id);
      if (etDurationPreIll == null) {
        break missingId;
      }

      id = R.id.etHopNameAdd;
      EditText etHopNameAdd = ViewBindings.findChildViewById(rootView, id);
      if (etHopNameAdd == null) {
        break missingId;
      }

      id = R.id.etInvestigatorMob;
      EditText etInvestigatorMob = ViewBindings.findChildViewById(rootView, id);
      if (etInvestigatorMob == null) {
        break missingId;
      }

      id = R.id.etNameAndAdd;
      EditText etNameAndAdd = ViewBindings.findChildViewById(rootView, id);
      if (etNameAndAdd == null) {
        break missingId;
      }

      id = R.id.etNoOfBed;
      EditText etNoOfBed = ViewBindings.findChildViewById(rootView, id);
      if (etNoOfBed == null) {
        break missingId;
      }

      id = R.id.etPolicyNo;
      EditText etPolicyNo = ViewBindings.findChildViewById(rootView, id);
      if (etPolicyNo == null) {
        break missingId;
      }

      id = R.id.etRelationInsured;
      EditText etRelationInsured = ViewBindings.findChildViewById(rootView, id);
      if (etRelationInsured == null) {
        break missingId;
      }

      id = R.id.etReqAmount;
      EditText etReqAmount = ViewBindings.findChildViewById(rootView, id);
      if (etReqAmount == null) {
        break missingId;
      }

      id = R.id.etRoomRent;
      EditText etRoomRent = ViewBindings.findChildViewById(rootView, id);
      if (etRoomRent == null) {
        break missingId;
      }

      id = R.id.etSex;
      EditText etSex = ViewBindings.findChildViewById(rootView, id);
      if (etSex == null) {
        break missingId;
      }

      id = R.id.etSumInsured;
      EditText etSumInsured = ViewBindings.findChildViewById(rootView, id);
      if (etSumInsured == null) {
        break missingId;
      }

      id = R.id.etTLCWBC;
      EditText etTLCWBC = ViewBindings.findChildViewById(rootView, id);
      if (etTLCWBC == null) {
        break missingId;
      }

      id = R.id.etTemp;
      EditText etTemp = ViewBindings.findChildViewById(rootView, id);
      if (etTemp == null) {
        break missingId;
      }

      id = R.id.etVeri_PatientAddDetails;
      EditText etVeriPatientAddDetails = ViewBindings.findChildViewById(rootView, id);
      if (etVeriPatientAddDetails == null) {
        break missingId;
      }

      id = R.id.etVeri_PatientAgeMAtched;
      EditText etVeriPatientAgeMAtched = ViewBindings.findChildViewById(rootView, id);
      if (etVeriPatientAgeMAtched == null) {
        break missingId;
      }

      id = R.id.etVeri_PatientPhotoMatched;
      EditText etVeriPatientPhotoMatched = ViewBindings.findChildViewById(rootView, id);
      if (etVeriPatientPhotoMatched == null) {
        break missingId;
      }

      id = R.id.etVeri_PatientSignature;
      EditText etVeriPatientSignature = ViewBindings.findChildViewById(rootView, id);
      if (etVeriPatientSignature == null) {
        break missingId;
      }

      id = R.id.etVeri_PatientonBed;
      EditText etVeriPatientonBed = ViewBindings.findChildViewById(rootView, id);
      if (etVeriPatientonBed == null) {
        break missingId;
      }

      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.imgLogout;
      ImageView imgLogout = ViewBindings.findChildViewById(rootView, id);
      if (imgLogout == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.llOne;
      LinearLayout llOne = ViewBindings.findChildViewById(rootView, id);
      if (llOne == null) {
        break missingId;
      }

      id = R.id.llTwo;
      LinearLayout llTwo = ViewBindings.findChildViewById(rootView, id);
      if (llTwo == null) {
        break missingId;
      }

      id = R.id.newDate;
      TextView newDate = ViewBindings.findChildViewById(rootView, id);
      if (newDate == null) {
        break missingId;
      }

      id = R.id.rll;
      RelativeLayout rll = ViewBindings.findChildViewById(rootView, id);
      if (rll == null) {
        break missingId;
      }

      id = R.id.spinnerDoc_IDCard;
      Spinner spinnerDocIDCard = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDocIDCard == null) {
        break missingId;
      }

      id = R.id.spinnerDoc_IndoreCase;
      Spinner spinnerDocIndoreCase = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDocIndoreCase == null) {
        break missingId;
      }

      id = R.id.spinnerDoc_PreAuth;
      Spinner spinnerDocPreAuth = ViewBindings.findChildViewById(rootView, id);
      if (spinnerDocPreAuth == null) {
        break missingId;
      }

      id = R.id.spinnerFirstYrPolicy;
      Spinner spinnerFirstYrPolicy = ViewBindings.findChildViewById(rootView, id);
      if (spinnerFirstYrPolicy == null) {
        break missingId;
      }

      id = R.id.spinnerModeofTratment;
      Spinner spinnerModeofTratment = ViewBindings.findChildViewById(rootView, id);
      if (spinnerModeofTratment == null) {
        break missingId;
      }

      id = R.id.spinnerRoomType;
      Spinner spinnerRoomType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRoomType == null) {
        break missingId;
      }

      id = R.id.spinnerTypeofClaim;
      Spinner spinnerTypeofClaim = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTypeofClaim == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_HospReg;
      Spinner spinnerVeriHospReg = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriHospReg == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientAbleDisSymptoms;
      Spinner spinnerVeriPatientAbleDisSymptoms = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientAbleDisSymptoms == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientAddDetails;
      Spinner spinnerVeriPatientAddDetails = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientAddDetails == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientAgeMAtched;
      Spinner spinnerVeriPatientAgeMAtched = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientAgeMAtched == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientApperedDisco;
      Spinner spinnerVeriPatientApperedDisco = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientApperedDisco == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientLineTreatment;
      Spinner spinnerVeriPatientLineTreatment = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientLineTreatment == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientNoDrVisited;
      Spinner spinnerVeriPatientNoDrVisited = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientNoDrVisited == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientPhotoMatched;
      Spinner spinnerVeriPatientPhotoMatched = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientPhotoMatched == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientRecords;
      Spinner spinnerVeriPatientRecords = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientRecords == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientRelaPres;
      Spinner spinnerVeriPatientRelaPres = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientRelaPres == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientSignature;
      Spinner spinnerVeriPatientSignature = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientSignature == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientSymptoms;
      Spinner spinnerVeriPatientSymptoms = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientSymptoms == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_PatientonBed;
      Spinner spinnerVeriPatientonBed = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriPatientonBed == null) {
        break missingId;
      }

      id = R.id.spinnerVeri_susBack;
      Spinner spinnerVeriSusBack = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVeriSusBack == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivitySurveyFormBinding((ConstraintLayout) rootView, btnNext, btnSubmit,
          etAddDrName, etAge, etAmoutByTpa, etBP, etBloodSugar, etDateNAtureofAilment,
          etDateofAddmission, etDateofDis, etDrMob, etDurationPreIll, etHopNameAdd,
          etInvestigatorMob, etNameAndAdd, etNoOfBed, etPolicyNo, etRelationInsured, etReqAmount,
          etRoomRent, etSex, etSumInsured, etTLCWBC, etTemp, etVeriPatientAddDetails,
          etVeriPatientAgeMAtched, etVeriPatientPhotoMatched, etVeriPatientSignature,
          etVeriPatientonBed, imgBack, imgLogout, ll, llOne, llTwo, newDate, rll, spinnerDocIDCard,
          spinnerDocIndoreCase, spinnerDocPreAuth, spinnerFirstYrPolicy, spinnerModeofTratment,
          spinnerRoomType, spinnerTypeofClaim, spinnerVeriHospReg,
          spinnerVeriPatientAbleDisSymptoms, spinnerVeriPatientAddDetails,
          spinnerVeriPatientAgeMAtched, spinnerVeriPatientApperedDisco,
          spinnerVeriPatientLineTreatment, spinnerVeriPatientNoDrVisited,
          spinnerVeriPatientPhotoMatched, spinnerVeriPatientRecords, spinnerVeriPatientRelaPres,
          spinnerVeriPatientSignature, spinnerVeriPatientSymptoms, spinnerVeriPatientonBed,
          spinnerVeriSusBack, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
