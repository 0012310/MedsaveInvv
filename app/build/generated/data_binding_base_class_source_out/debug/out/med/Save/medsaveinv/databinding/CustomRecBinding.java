// Generated by view binder compiler. Do not edit!
package med.Save.medsaveinv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import med.Save.medsaveinv.R;

public final class CustomRecBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircleImageView imageview;

  @NonNull
  public final LinearLayout llParent;

  @NonNull
  public final TextView tvAddmission;

  @NonNull
  public final TextView tvHosCity;

  @NonNull
  public final TextView tvHosName;

  @NonNull
  public final TextView tvPatienFileNo;

  @NonNull
  public final TextView tvPatienName;

  @NonNull
  public final TextView tvProsperName;

  private CustomRecBinding(@NonNull LinearLayout rootView, @NonNull CircleImageView imageview,
      @NonNull LinearLayout llParent, @NonNull TextView tvAddmission, @NonNull TextView tvHosCity,
      @NonNull TextView tvHosName, @NonNull TextView tvPatienFileNo, @NonNull TextView tvPatienName,
      @NonNull TextView tvProsperName) {
    this.rootView = rootView;
    this.imageview = imageview;
    this.llParent = llParent;
    this.tvAddmission = tvAddmission;
    this.tvHosCity = tvHosCity;
    this.tvHosName = tvHosName;
    this.tvPatienFileNo = tvPatienFileNo;
    this.tvPatienName = tvPatienName;
    this.tvProsperName = tvProsperName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomRecBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomRecBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_rec, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomRecBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageview;
      CircleImageView imageview = ViewBindings.findChildViewById(rootView, id);
      if (imageview == null) {
        break missingId;
      }

      id = R.id.llParent;
      LinearLayout llParent = ViewBindings.findChildViewById(rootView, id);
      if (llParent == null) {
        break missingId;
      }

      id = R.id.tvAddmission;
      TextView tvAddmission = ViewBindings.findChildViewById(rootView, id);
      if (tvAddmission == null) {
        break missingId;
      }

      id = R.id.tvHosCity;
      TextView tvHosCity = ViewBindings.findChildViewById(rootView, id);
      if (tvHosCity == null) {
        break missingId;
      }

      id = R.id.tvHosName;
      TextView tvHosName = ViewBindings.findChildViewById(rootView, id);
      if (tvHosName == null) {
        break missingId;
      }

      id = R.id.tvPatienFileNo;
      TextView tvPatienFileNo = ViewBindings.findChildViewById(rootView, id);
      if (tvPatienFileNo == null) {
        break missingId;
      }

      id = R.id.tvPatienName;
      TextView tvPatienName = ViewBindings.findChildViewById(rootView, id);
      if (tvPatienName == null) {
        break missingId;
      }

      id = R.id.tvProsperName;
      TextView tvProsperName = ViewBindings.findChildViewById(rootView, id);
      if (tvProsperName == null) {
        break missingId;
      }

      return new CustomRecBinding((LinearLayout) rootView, imageview, llParent, tvAddmission,
          tvHosCity, tvHosName, tvPatienFileNo, tvPatienName, tvProsperName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
